{"ast":null,"code":"var _jsxFileName = \"/Users/mariembchir/Desktop/Software Engineering Journey /SheCodes/React/Dictionary_Project/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Results from \"./Results.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary() {\n  _s();\n\n  let [keyword, setKeyword] = useState(\"Welcome\");\n  let [results, setResults] = useState();\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelResponse(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n    let pexelKey = \"563492ad6f917000010000017d590a72119842aa8a0977010f5ac738\";\n    let pexelUrl = `https://api.pexels.com/v1/search?query=${keyword}`;\n    let header = {\n      Authorization: `Bearer ${pexelKey}`\n    };\n    axios.get(pexelUrl, {\n      headers: header\n    }).then(handlePexelResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            autoFocus: true,\n            onChange: handleKeywordChange,\n            placeholder: \"Enter Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n  }\n}\n\n_s(Dictionary, \"Cttf4mtY1xUL3Tb3YoKXd5tgwbg=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/mariembchir/Desktop/Software Engineering Journey /SheCodes/React/Dictionary_Project/src/Dictionary.js"],"names":["React","useState","axios","Results","Dictionary","keyword","setKeyword","results","setResults","loaded","setLoaded","photos","setPhotos","handleResponse","response","data","handlePexelResponse","search","apiUrl","get","then","pexelKey","pexelUrl","header","Authorization","headers","handleSubmit","event","preventDefault","handleKeywordChange","target","value","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,SAAD,CAApC;AACA,MAAI,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAApC;AACA,MAAI,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASY,cAAT,CAAwBC,QAAxB,EAAkC;AAChCN,IAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACD;;AAED,WAASC,mBAAT,CAA6BF,QAA7B,EAAuC;AACrCF,IAAAA,SAAS,CAACE,QAAQ,CAACC,IAAT,CAAcJ,MAAf,CAAT;AACD;;AAED,WAASM,MAAT,GAAkB;AAChB;AACA,QAAIC,MAAM,GAAI,mDAAkDb,OAAQ,EAAxE;AACAH,IAAAA,KAAK,CAACiB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBP,cAAvB;AAEA,QAAIQ,QAAQ,GAAG,0DAAf;AACA,QAAIC,QAAQ,GAAI,0CAAyCjB,OAAQ,EAAjE;AACA,QAAIkB,MAAM,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASH,QAAS;AAApC,KAAb;AACAnB,IAAAA,KAAK,CAACiB,GAAN,CAAUG,QAAV,EAAoB;AAAEG,MAAAA,OAAO,EAAEF;AAAX,KAApB,EAAyCH,IAAzC,CAA8CJ,mBAA9C;AACD;;AAED,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAX,IAAAA,MAAM;AACP;;AAED,WAASY,mBAAT,CAA6BF,KAA7B,EAAoC;AAClCrB,IAAAA,UAAU,CAACqB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD;;AACD,WAASC,IAAT,GAAgB;AACdtB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,IAAAA,MAAM;AACP;;AAED,MAAIR,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAEiB,YAAhB;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAE,IAFb;AAGE,YAAA,QAAQ,EAAEG,mBAHZ;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEtB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBO;AACLyB,IAAAA,IAAI;AACL;AACF;;GAzDuB5B,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport axios from \"axios\";\nimport Results from \"./Results.js\";\n\nexport default function Dictionary() {\n  let [keyword, setKeyword] = useState(\"Welcome\");\n  let [results, setResults] = useState();\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelResponse(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n\n    let pexelKey = \"563492ad6f917000010000017d590a72119842aa8a0977010f5ac738\";\n    let pexelUrl = `https://api.pexels.com/v1/search?query=${keyword}`;\n    let header = { Authorization: `Bearer ${pexelKey}` };\n    axios.get(pexelUrl, { headers: header }).then(handlePexelResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Dictionary\">\n        <section>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              autoFocus={true}\n              onChange={handleKeywordChange}\n              placeholder=\"Enter Word\"\n            />\n          </form>\n        </section>\n        <Results results={results} />\n      </div>\n    );\n  } else {\n    load();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}